name: runner-cache-cross-os-toolkit

on:
  workflow_dispatch:

jobs:
  upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: runner-cache upload (${{ matrix.os }})
    steps:
    - uses: actions/checkout@v3
      with:
        repository: actions/toolkit
        ref: refs/heads/phantsure/download-progress

    - name: Create file to cache
      shell: bash
      run: |
        mkdir test-cache
        echo "foo" > test-cache/test.txt
        dd if=/dev/urandom bs=1048576 count=1 of=test-cache/test.img
    - if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: ln -s ./test.txt test-cache/link.txt
    - name: Set Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    # In order to save & restore cache from a shell script, certain env variables need to be set that are only available in the
    # node context. This runs a local action that gets and sets the necessary env variables that are needed
    - name: Set env variables
      uses: ./packages/cache/__tests__/__fixtures__/

    # Need root node_modules because certain npm packages like jest are configured for the entire repository and it won't be possible
    # without these to just compile the cache package
    - name: Install root npm packages
      run: npm ci

    - name: Compile cache package
      run: |
        npm ci
        npm run tsc
      working-directory: packages/cache

    # We're using node -e to call the functions directly available in the @actions/cache package
    - name: Save cache using saveCache()
      run: |
        node -e "Promise.resolve(require('./packages/cache/lib/cache').saveCache(['test-cache'],'${{ matrix.os }}-runner-${{ github.run_number }}-${{ github.run_attempt }}', {}, true))"


  restore:
    needs: upload
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        key: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: runner-cache restore (${{ matrix.os }}) with key (${{ matrix.key }})
    steps:
    - uses: actions/checkout@v3
      with:
        repository: actions/toolkit
        ref: refs/heads/phantsure/download-progress

    - name: Set Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    # In order to save & restore cache from a shell script, certain env variables need to be set that are only available in the
    # node context. This runs a local action that gets and sets the necessary env variables that are needed
    - name: Set env variables
      uses: ./packages/cache/__tests__/__fixtures__/

    # Need root node_modules because certain npm packages like jest are configured for the entire repository and it won't be possible
    # without these to just compile the cache package
    - name: Install root npm packages
      run: npm ci

    - name: Compile cache package
      run: |
        npm ci
        npm run tsc
      working-directory: packages/cache

    - name: Restore cache using restoreCache() with http-client
      run: |
        node -e "Promise.resolve(require('./packages/cache/lib/cache').restoreCache(['test-cache'],'${{ matrix.key }}-runner-${{ github.run_number }}-${{ github.run_attempt }}',[],{useAzureSdk: false}, true))"

    - name: Delete cache folders before restoring
      shell: bash
      run: |
        rm -rf test-cache
    - name: Restore cache using restoreCache() with Azure SDK
      run: |
        node -e "Promise.resolve(require('./packages/cache/lib/cache').restoreCache(['test-cache'],'${{ matrix.key }}-runner-${{ github.run_number }}-${{ github.run_attempt }}', [], {}, true))"

    - run: ls test-cache

