name: runner-cache-cross-os

on:
  workflow_dispatch:

jobs:
  upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    name: runner-cache upload (${{ matrix.os }})
    steps:
    - uses: actions/checkout@v3
    - name: Create file to cache
      shell: bash
      run: |
        mkdir test-cache
        echo "foo" > test-cache/test.txt
    - if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: ln -s ./test.txt test-cache/link.txt
    - if: ${{ runner.os == 'Windows' }}
      shell: cmd
      run: mklink test-cache/link.txt ./test.txt
    - uses: actions/cache@v3.2.1
      with:
        path: test-cache
        key: ${{ matrix.os }}-runner-${{ github.run_number }}-${{ github.run_attempt }}

  restore:
    needs: upload
    strategy:
      matrix:
        os: [windows-latest]
        key: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: runner-cache restore (${{ matrix.os }}) with key (${{ matrix.key }})
    steps:
    - uses: actions/checkout@v3
    - if: ${{ runner.os == 'Windows' }}
      shell: bash
      run: |
        #export MSYS=winsymlinks:nativestrict
        #rm "C:\Program Files\Git\usr\bin\tar.exe"
    - uses: actions/cache@v3.2.1
      id: cache
      with:
        path: test-cache
        key: ${{ matrix.key }}-runner-${{ github.run_number }}-${{ github.run_attempt }}
      env:
        MSYS: winsymlinks:nativestrict

    - run: |
        ls test-cache/
        rm test-cache
        #cat test-cache/link.txt
        

    - name: Fail if cache not found
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Cache not found, upload failed"
        exit 1
